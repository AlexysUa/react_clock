{"version":3,"sources":["components/Clock/Clock.jsx","components/Clock/index.jsx","App.js","index.js"],"names":["Clock","state","date","Date","timer","setInterval","setState","this","prevProps","name","props","console","log","clearInterval","className","toLocaleTimeString","React","Component","defaultProps","App","isClockVisible","clockName","toggleClockVisibility","target","innerText","createRandomName","Math","random","Button","variant","onClick","ReactDOM","render","document","getElementById"],"mappings":"wQAKMA,G,wNACJC,MAAQ,CACNC,KAAM,IAAIC,M,EAGZC,MAAQC,aAAY,WAClB,EAAKC,SAAS,CACZJ,KAAM,IAAIC,SAEX,K,kEAGD,OAAOI,KAAKH,Q,yCAGKI,GACbA,EAAUC,OAASF,KAAKG,MAAMD,MAChCE,QAAQC,IAAR,+CAC0CJ,EAAUC,KADpD,yBACyEF,KAAKG,MAAMD,S,6CAMtFI,cAAcN,KAAKH,S,+BAGX,IACAF,EAASK,KAAKN,MAAdC,KAER,OACE,oCACE,yBAAKY,UAAU,SACZZ,EAAKa,qBACLJ,QAAQC,IAAIV,EAAKa,4B,GAlCRC,IAAMC,YA6C1BjB,EAAMkB,aAAe,CACnBT,KAAM,GAGOT,ICpDAA,EDoDAA,EEAAmB,G,kNA/CblB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,G,EAGbC,sBAAwB,YAAiB,IAAdC,EAAa,EAAbA,OACA,eAArBA,EAAOC,UACT,EAAKlB,SAAS,CAAEc,gBAAgB,IACF,eAArBG,EAAOC,WAChB,EAAKlB,SAAS,CAAEc,gBAAgB,K,EAIpCK,iBAAmB,WACjB,EAAKnB,SAAS,CAAEe,UAAWK,KAAKC,Y,uDAGxB,IACAP,EAAmBb,KAAKN,MAAxBmB,eAER,OACE,yBAAKN,UAAU,OACb,2CACCM,GAAkB,kBAAC,EAAD,CAAOX,KAAMF,KAAKN,MAAMoB,YAC3C,kBAACO,EAAA,EAAD,CACEC,QAAQ,UACRC,QAASvB,KAAKe,uBAFhB,cAMA,kBAACM,EAAA,EAAD,CACEC,QAAQ,YACRC,QAASvB,KAAKe,uBAFhB,cAMA,kBAACM,EAAA,EAAD,CACEC,QAAQ,UACRC,QAASvB,KAAKkB,kBAFhB,wB,GArCUT,IAAMC,YCFxBc,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.9f273687.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport './Clock.scss';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  timer = setInterval(() => {\n    this.setState({\n      date: new Date(),\n    });\n  }, 1000)\n\n  componentDidMount() {\n    return this.timer;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      console.log(\n        `The Clock was renamed from oldName = ${prevProps.name} to newName = ${this.props.name}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <>\n        <div className=\"clock\">\n          {date.toLocaleTimeString()}\n          {console.log(date.toLocaleTimeString())}\n        </div>\n      </>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number,\n};\n\nClock.defaultProps = {\n  name: 1,\n};\n\nexport default Clock;\n","import Clock from './Clock';\n\nexport default Clock;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Clock from './components/Clock';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 1,\n  }\n\n  toggleClockVisibility = ({ target }) => {\n    if (target.innerText === 'Show Clock') {\n      this.setState({ isClockVisible: true });\n    } else if (target.innerText === 'Hide Clock') {\n      this.setState({ isClockVisible: false });\n    }\n  }\n\n  createRandomName = () => {\n    this.setState({ clockName: Math.random() });\n  }\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {isClockVisible && <Clock name={this.state.clockName} />}\n        <Button\n          variant=\"primary\"\n          onClick={this.toggleClockVisibility}\n        >\n          Show Clock\n        </Button>\n        <Button\n          variant=\"secondary\"\n          onClick={this.toggleClockVisibility}\n        >\n          Hide Clock\n        </Button>\n        <Button\n          variant=\"success\"\n          onClick={this.createRandomName}\n        >\n          Set random name\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}